__d((function(g,r,i,a,m,e,d){Object.defineProperty(e,"__esModule",{value:!0}),Object.defineProperty(e,"BleATTErrorCode",{enumerable:!0,get:function(){return n.BleATTErrorCode}}),Object.defineProperty(e,"BleAndroidErrorCode",{enumerable:!0,get:function(){return n.BleAndroidErrorCode}}),Object.defineProperty(e,"BleError",{enumerable:!0,get:function(){return n.BleError}}),Object.defineProperty(e,"BleErrorCode",{enumerable:!0,get:function(){return n.BleErrorCode}}),Object.defineProperty(e,"BleIOSErrorCode",{enumerable:!0,get:function(){return n.BleIOSErrorCode}}),Object.defineProperty(e,"BleManager",{enumerable:!0,get:function(){return t.BleManager}}),Object.defineProperty(e,"Characteristic",{enumerable:!0,get:function(){return c.Characteristic}}),Object.defineProperty(e,"ConnectionPriority",{enumerable:!0,get:function(){return b.ConnectionPriority}}),Object.defineProperty(e,"Descriptor",{enumerable:!0,get:function(){return l.Descriptor}}),Object.defineProperty(e,"Device",{enumerable:!0,get:function(){return o.Device}}),Object.defineProperty(e,"LogLevel",{enumerable:!0,get:function(){return b.LogLevel}}),Object.defineProperty(e,"ScanCallbackType",{enumerable:!0,get:function(){return b.ScanCallbackType}}),Object.defineProperty(e,"ScanMode",{enumerable:!0,get:function(){return b.ScanMode}}),Object.defineProperty(e,"Service",{enumerable:!0,get:function(){return u.Service}}),Object.defineProperty(e,"State",{enumerable:!0,get:function(){return b.State}}),Object.defineProperty(e,"fullUUID",{enumerable:!0,get:function(){return f.fullUUID}});var n=r(d[0]),t=r(d[1]),o=r(d[2]),u=r(d[3]),c=r(d[4]),l=r(d[5]),f=r(d[6]),b=r(d[7])}),320,[322,324,325,327,328,329,323,326]);
__d((function(g,r,i,a,m,e,d){Object.defineProperty(e,"__esModule",{value:!0}),e.BleIOSErrorCode=e.BleErrorCodeMessage=e.BleErrorCode=e.BleError=e.BleAndroidErrorCode=e.BleATTErrorCode=void 0,e.parseBleError=function(t,c){let s;const l=c||n;try{const c=JSON.parse(t);s=new o(c,l)}catch(c){s=new o(t,l)}return s};var t=r(d[0]);class o extends Error{constructor(o,n){if(super(),this.message=n[c.UnknownError],'string'==typeof o)this.errorCode=c.UnknownError,this.attErrorCode=null,this.iosErrorCode=null,this.androidErrorCode=null,this.reason=o;else{const c=n[o.errorCode];c&&(this.message=(0,t.fillStringWithArguments)(c,o)),this.errorCode=o.errorCode,this.attErrorCode=o.attErrorCode,this.iosErrorCode=o.iosErrorCode,this.androidErrorCode=o.androidErrorCode,this.reason=o.reason}this.name='BleError'}}e.BleError=o;const c=e.BleErrorCode={UnknownError:0,BluetoothManagerDestroyed:1,OperationCancelled:2,OperationTimedOut:3,OperationStartFailed:4,InvalidIdentifiers:5,BluetoothUnsupported:100,BluetoothUnauthorized:101,BluetoothPoweredOff:102,BluetoothInUnknownState:103,BluetoothResetting:104,BluetoothStateChangeFailed:105,DeviceConnectionFailed:200,DeviceDisconnected:201,DeviceRSSIReadFailed:202,DeviceAlreadyConnected:203,DeviceNotFound:204,DeviceNotConnected:205,DeviceMTUChangeFailed:206,ServicesDiscoveryFailed:300,IncludedServicesDiscoveryFailed:301,ServiceNotFound:302,ServicesNotDiscovered:303,CharacteristicsDiscoveryFailed:400,CharacteristicWriteFailed:401,CharacteristicReadFailed:402,CharacteristicNotifyChangeFailed:403,CharacteristicNotFound:404,CharacteristicsNotDiscovered:405,CharacteristicInvalidDataFormat:406,DescriptorsDiscoveryFailed:500,DescriptorWriteFailed:501,DescriptorReadFailed:502,DescriptorNotFound:503,DescriptorsNotDiscovered:504,DescriptorInvalidDataFormat:505,DescriptorWriteNotAllowed:506,ScanStartFailed:600,LocationServicesDisabled:601},n=e.BleErrorCodeMessage={[c.UnknownError]:'Unknown error occurred. This is probably a bug! Check reason property.',[c.BluetoothManagerDestroyed]:'BleManager was destroyed',[c.OperationCancelled]:'Operation was cancelled',[c.OperationTimedOut]:'Operation timed out',[c.OperationStartFailed]:'Operation was rejected',[c.InvalidIdentifiers]:'Invalid UUIDs or IDs were passed: {internalMessage}',[c.BluetoothUnsupported]:'BluetoothLE is unsupported on this device',[c.BluetoothUnauthorized]:'Device is not authorized to use BluetoothLE',[c.BluetoothPoweredOff]:'BluetoothLE is powered off',[c.BluetoothInUnknownState]:'BluetoothLE is in unknown state',[c.BluetoothResetting]:'BluetoothLE is resetting',[c.BluetoothStateChangeFailed]:'Bluetooth state change failed',[c.DeviceConnectionFailed]:'Device {deviceID} connection failed',[c.DeviceDisconnected]:'Device {deviceID} was disconnected',[c.DeviceRSSIReadFailed]:'RSSI read failed for device {deviceID}',[c.DeviceAlreadyConnected]:'Device {deviceID} is already connected',[c.DeviceNotFound]:'Device {deviceID} not found',[c.DeviceNotConnected]:'Device {deviceID} is not connected',[c.DeviceMTUChangeFailed]:'Device {deviceID} could not change MTU size',[c.ServicesDiscoveryFailed]:'Services discovery failed for device {deviceID}',[c.IncludedServicesDiscoveryFailed]:'Included services discovery failed for device {deviceID} and service: {serviceUUID}',[c.ServiceNotFound]:'Service {serviceUUID} for device {deviceID} not found',[c.ServicesNotDiscovered]:'Services not discovered for device {deviceID}',[c.CharacteristicsDiscoveryFailed]:'Characteristic discovery failed for device {deviceID} and service {serviceUUID}',[c.CharacteristicWriteFailed]:'Characteristic {characteristicUUID} write failed for device {deviceID} and service {serviceUUID}',[c.CharacteristicReadFailed]:'Characteristic {characteristicUUID} read failed for device {deviceID} and service {serviceUUID}',[c.CharacteristicNotifyChangeFailed]:'Characteristic {characteristicUUID} notify change failed for device {deviceID} and service {serviceUUID}',[c.CharacteristicNotFound]:'Characteristic {characteristicUUID} not found',[c.CharacteristicsNotDiscovered]:'Characteristics not discovered for device {deviceID} and service {serviceUUID}',[c.CharacteristicInvalidDataFormat]:'Cannot write to characteristic {characteristicUUID} with invalid data format: {internalMessage}',[c.DescriptorsDiscoveryFailed]:'Descriptor {descriptorUUID} discovery failed for device {deviceID}, service {serviceUUID} and characteristic {characteristicUUID}',[c.DescriptorWriteFailed]:'Descriptor {descriptorUUID} write failed for device {deviceID}, service {serviceUUID} and characteristic {characteristicUUID}',[c.DescriptorReadFailed]:'Descriptor {descriptorUUID} read failed for device {deviceID}, service {serviceUUID} and characteristic {characteristicUUID}',[c.DescriptorNotFound]:'Descriptor {descriptorUUID} not found',[c.DescriptorsNotDiscovered]:'Descriptors not discovered for device {deviceID}, service {serviceUUID} and characteristic {characteristicUUID}',[c.DescriptorInvalidDataFormat]:'Cannot write to descriptor {descriptorUUID} with invalid data format: {internalMessage}',[c.DescriptorWriteNotAllowed]:"Cannot write to descriptor {descriptorUUID}. It's not allowed by iOS and therefore forbidden on Android as well.",[c.ScanStartFailed]:'Cannot start scanning operation',[c.LocationServicesDisabled]:'Location services are disabled'};e.BleATTErrorCode={Success:0,InvalidHandle:1,ReadNotPermitted:2,WriteNotPermitted:3,InvalidPdu:4,InsufficientAuthentication:5,RequestNotSupported:6,InvalidOffset:7,InsufficientAuthorization:8,PrepareQueueFull:9,AttributeNotFound:10,AttributeNotLong:11,InsufficientEncryptionKeySize:12,InvalidAttributeValueLength:13,UnlikelyError:14,InsufficientEncryption:15,UnsupportedGroupType:16,InsufficientResources:17},e.BleIOSErrorCode={Unknown:0,InvalidParameters:1,InvalidHandle:2,NotConnected:3,OutOfSpace:4,OperationCancelled:5,ConnectionTimeout:6,PeripheralDisconnected:7,UuidNotAllowed:8,AlreadyAdvertising:9,ConnectionFailed:10,ConnectionLimitReached:11,UnknownDevice:12},e.BleAndroidErrorCode={NoResources:128,InternalError:129,WrongState:130,DbFull:131,Busy:132,Error:133,CmdStarted:134,IllegalParameter:135,Pending:136,AuthFail:137,More:138,InvalidCfg:139,ServiceStarted:140,EncrypedNoMitm:141,NotEncrypted:142,Congested:143}}),322,[323]);
__d((function(g,r,i,a,m,e,d){'use strict';var t=r(d[0]);Object.defineProperty(e,"__esModule",{value:!0}),e.fillStringWithArguments=function(t,n){return t.replace(/\{([^}]+)\}/g,(function(t,u){return n[u]||'?'}))},e.fullUUID=function(t){if(4===t.length)return'0000'+t.toLowerCase()+'-0000-1000-8000-00805f9b34fb';if(8===t.length)return t.toLowerCase()+'-0000-1000-8000-00805f9b34fb';return t.toLowerCase()},e.isIOS=void 0;t(r(d[1]));e.isIOS=!1}),323,[1,88]);
__d((function(g,r,i,a,m,e,d){'use strict';var t=r(d[0]);Object.defineProperty(e,"__esModule",{value:!0}),e.BleManager=void 0;var s=r(d[1]),c=r(d[2]),n=r(d[3]),o=r(d[4]),l=(r(d[5]),r(d[6])),h=r(d[7]),u=r(d[8]);t(r(d[9]));class _{static sharedInstance=null;constructor(t={}){if(null!==_.sharedInstance)return _.sharedInstance;this._eventEmitter=new l.EventEmitter(l.BleModule),this._uniqueId=0,this._activePromises={},this._activeSubscriptions={};const c=t.restoreStateFunction;null!=c&&null!=t.restoreStateIdentifier&&(this._activeSubscriptions[this._nextUniqueID()]=this._eventEmitter.addListener(l.BleModule.RestoreStateEvent,(t=>{c(null!=t?{connectedPeripherals:t.connectedPeripherals.map((t=>new s.Device(t,this)))}:null)}))),this._errorCodesToMessagesMapping=t.errorCodesToMessagesMapping?t.errorCodesToMessagesMapping:h.BleErrorCodeMessage,l.BleModule.createClient(t.restoreStateIdentifier||null),_.sharedInstance=this}_destroyPromises(){const t=new h.BleError({errorCode:h.BleErrorCode.BluetoothManagerDestroyed,attErrorCode:null,iosErrorCode:null,androidErrorCode:null,reason:null},this._errorCodesToMessagesMapping);for(const s in this._activePromises)this._activePromises[s](t)}_destroySubscriptions(){for(const t in this._activeSubscriptions)this._activeSubscriptions[t].remove()}async destroy(){const t=await this._callPromise(l.BleModule.destroyClient());return null!=this._scanEventSubscription&&(this._scanEventSubscription.remove(),this._scanEventSubscription=null),this._destroySubscriptions(),_.sharedInstance&&(_.sharedInstance=null),this._destroyPromises(),t}_nextUniqueID(){return this._uniqueId+=1,this._uniqueId.toString()}async _callPromise(t){const s=this._nextUniqueID();try{const c=new Promise(((t,c)=>{this._activePromises[s]=c})),n=await Promise.race([c,t]);return delete this._activePromises[s],n}catch(t){throw delete this._activePromises[s],(0,h.parseBleError)(t.message,this._errorCodesToMessagesMapping)}}setLogLevel(t){return this._callPromise(l.BleModule.setLogLevel(t))}logLevel(){return this._callPromise(l.BleModule.logLevel())}cancelTransaction(t){return this._callPromise(l.BleModule.cancelTransaction(t))}async enable(t){return t||(t=this._nextUniqueID()),await this._callPromise(l.BleModule.enable(t)),this}async disable(t){return console.warn("react-native-ble-plx: The enable and disable feature is no longer supported. In Android SDK 31+ there were major changes in permissions, which may cause problems with these functions, and in SDK 33+ they were completely removed."),t||(t=this._nextUniqueID()),await this._callPromise(l.BleModule.disable(t)),this}state(){return this._callPromise(l.BleModule.state())}onStateChange(t,s=!1){const c=this._eventEmitter.addListener(l.BleModule.StateChangeEvent,t),n=this._nextUniqueID();var o;if(s){var h=!1;this._callPromise(this.state()).then((s=>{h||t(s)})),o={remove:()=>{null!=this._activeSubscriptions[n]&&(h=!0,delete this._activeSubscriptions[n],c.remove())}}}else o={remove:()=>{null!=this._activeSubscriptions[n]&&(delete this._activeSubscriptions[n],c.remove())}};return this._activeSubscriptions[n]=o,o}async startDeviceScan(t,c,n){return this._scanEventSubscription=this._eventEmitter.addListener(l.BleModule.ScanEvent,(([t,c])=>{n(t?(0,h.parseBleError)(t,this._errorCodesToMessagesMapping):null,c?new s.Device(c,this):null)})),this._callPromise(l.BleModule.startDeviceScan(t,c))}stopDeviceScan(){return null!=this._scanEventSubscription&&(this._scanEventSubscription.remove(),this._scanEventSubscription=null),this._callPromise(l.BleModule.stopDeviceScan())}async requestConnectionPriorityForDevice(t,c,n){n||(n=this._nextUniqueID());const o=await this._callPromise(l.BleModule.requestConnectionPriorityForDevice(t,c,n));return new s.Device(o,this)}async readRSSIForDevice(t,c){c||(c=this._nextUniqueID());const n=await this._callPromise(l.BleModule.readRSSIForDevice(t,c));return new s.Device(n,this)}async requestMTUForDevice(t,c,n){n||(n=this._nextUniqueID());const o=await this._callPromise(l.BleModule.requestMTUForDevice(t,c,n));return new s.Device(o,this)}async devices(t){return(await this._callPromise(l.BleModule.devices(t))).map((t=>new s.Device(t,this)))}async connectedDevices(t){return(await this._callPromise(l.BleModule.connectedDevices(t))).map((t=>new s.Device(t,this)))}async connectToDevice(t,c){const n=await this._callPromise(l.BleModule.connectToDevice(t,c));return new s.Device(n,this)}async cancelDeviceConnection(t){const c=await this._callPromise(l.BleModule.cancelDeviceConnection(t));return new s.Device(c,this)}onDeviceDisconnected(t,c){const n=this._eventEmitter.addListener(l.BleModule.DisconnectionEvent,(([n,o])=>{t===o.id&&c(n?(0,h.parseBleError)(n,this._errorCodesToMessagesMapping):null,new s.Device(o,this))})),o=this._nextUniqueID(),u={remove:()=>{null!=this._activeSubscriptions[o]&&(delete this._activeSubscriptions[o],n.remove())}};return this._activeSubscriptions[o]=u,u}isDeviceConnected(t){return this._callPromise(l.BleModule.isDeviceConnected(t))}async discoverAllServicesAndCharacteristicsForDevice(t,c){c||(c=this._nextUniqueID());const n=await this._callPromise(l.BleModule.discoverAllServicesAndCharacteristicsForDevice(t,c)),o=(await this._callPromise(l.BleModule.servicesForDevice(t))||[]).map((t=>t.uuid)),h=Object.assign({},n,{serviceUUIDs:o});return new s.Device(h,this)}async servicesForDevice(t){return(await this._callPromise(l.BleModule.servicesForDevice(t))).map((t=>new c.Service(t,this)))}characteristicsForDevice(t,s){return this._handleCharacteristics(l.BleModule.characteristicsForDevice(t,s))}_characteristicsForService(t){return this._handleCharacteristics(l.BleModule.characteristicsForService(t))}async _handleCharacteristics(t){return(await this._callPromise(t)).map((t=>new n.Characteristic(t,this)))}descriptorsForDevice(t,s,c){return this._handleDescriptors(l.BleModule.descriptorsForDevice(t,s,c))}_descriptorsForService(t,s){return this._handleDescriptors(l.BleModule.descriptorsForService(t,s))}_descriptorsForCharacteristic(t){return this._handleDescriptors(l.BleModule.descriptorsForCharacteristic(t))}async _handleDescriptors(t){return(await this._callPromise(t)).map((t=>new o.Descriptor(t,this)))}async readCharacteristicForDevice(t,s,c,o){o||(o=this._nextUniqueID());const h=await this._callPromise(l.BleModule.readCharacteristicForDevice(t,s,c,o));return new n.Characteristic(h,this)}async _readCharacteristicForService(t,s,c){c||(c=this._nextUniqueID());const o=await this._callPromise(l.BleModule.readCharacteristicForService(t,s,c));return new n.Characteristic(o,this)}async _readCharacteristic(t,s){s||(s=this._nextUniqueID());const c=await this._callPromise(l.BleModule.readCharacteristic(t,s));return new n.Characteristic(c,this)}async writeCharacteristicWithResponseForDevice(t,s,c,o,h){h||(h=this._nextUniqueID());const u=await this._callPromise(l.BleModule.writeCharacteristicForDevice(t,s,c,o,!0,h));return new n.Characteristic(u,this)}async _writeCharacteristicWithResponseForService(t,s,c,o){o||(o=this._nextUniqueID());const h=await this._callPromise(l.BleModule.writeCharacteristicForService(t,s,c,!0,o));return new n.Characteristic(h,this)}async _writeCharacteristicWithResponse(t,s,c){c||(c=this._nextUniqueID());const o=await this._callPromise(l.BleModule.writeCharacteristic(t,s,!0,c));return new n.Characteristic(o,this)}async writeCharacteristicWithoutResponseForDevice(t,s,c,o,h){h||(h=this._nextUniqueID());const u=await this._callPromise(l.BleModule.writeCharacteristicForDevice(t,s,c,o,!1,h));return new n.Characteristic(u,this)}async _writeCharacteristicWithoutResponseForService(t,s,c,o){o||(o=this._nextUniqueID());const h=await this._callPromise(l.BleModule.writeCharacteristicForService(t,s,c,!1,o));return new n.Characteristic(h,this)}async _writeCharacteristicWithoutResponse(t,s,c){c||(c=this._nextUniqueID());const o=await this._callPromise(l.BleModule.writeCharacteristic(t,s,!1,c));return new n.Characteristic(o,this)}monitorCharacteristicForDevice(t,s,c,n,o,h){const _=o||this._nextUniqueID(),v=[t,s,c,_],D=u.isIOS?v:[...v,h];return this._handleMonitorCharacteristic(l.BleModule.monitorCharacteristicForDevice(...D),_,n)}_monitorCharacteristicForService(t,s,c,n,o){const h=n||this._nextUniqueID(),_=[t,s,h],v=u.isIOS?_:[..._,o];return this._handleMonitorCharacteristic(l.BleModule.monitorCharacteristicForService(...v),h,c)}_monitorCharacteristic(t,s,c,n){const o=c||this._nextUniqueID(),h=[t,o],_=u.isIOS?h:[...h,n];return this._handleMonitorCharacteristic(l.BleModule.monitorCharacteristic(..._),o,s)}_handleMonitorCharacteristic(t,s,c){const o=this._eventEmitter.addListener(l.BleModule.ReadEvent,(([t,o,l])=>{s===l&&(t?c((0,h.parseBleError)(t,this._errorCodesToMessagesMapping),null):c(null,new n.Characteristic(o,this)))})),u=this._nextUniqueID(),_={remove:()=>{null!=this._activeSubscriptions[u]&&(delete this._activeSubscriptions[u],o.remove())}};return this._activeSubscriptions[u]=_,this._callPromise(t).then((()=>{_.remove()}),(t=>{c(t,null),_.remove()})),{remove:()=>{l.BleModule.cancelTransaction(s)}}}async readDescriptorForDevice(t,s,c,n,h){h||(h=this._nextUniqueID());const u=await this._callPromise(l.BleModule.readDescriptorForDevice(t,s,c,n,h));return new o.Descriptor(u,this)}async _readDescriptorForService(t,s,c,n){n||(n=this._nextUniqueID());const h=await this._callPromise(l.BleModule.readDescriptorForService(t,s,c,n));return new o.Descriptor(h,this)}async _readDescriptorForCharacteristic(t,s,c){c||(c=this._nextUniqueID());const n=await this._callPromise(l.BleModule.readDescriptorForCharacteristic(t,s,c));return new o.Descriptor(n,this)}async _readDescriptor(t,s){s||(s=this._nextUniqueID());const c=await this._callPromise(l.BleModule.readDescriptor(t,s));return new o.Descriptor(c,this)}async writeDescriptorForDevice(t,s,c,n,h,u){u||(u=this._nextUniqueID());const _=await this._callPromise(l.BleModule.writeDescriptorForDevice(t,s,c,n,h,u));return new o.Descriptor(_,this)}async _writeDescriptorForService(t,s,c,n,h){h||(h=this._nextUniqueID());const u=await this._callPromise(l.BleModule.writeDescriptorForService(t,s,c,n,h));return new o.Descriptor(u,this)}async _writeDescriptorForCharacteristic(t,s,c,n){n||(n=this._nextUniqueID());const h=await this._callPromise(l.BleModule.writeDescriptorForCharacteristic(t,s,c,n));return new o.Descriptor(h,this)}async _writeDescriptor(t,s,c){c||(c=this._nextUniqueID());const n=await this._callPromise(l.BleModule.writeDescriptor(t,s,c));return new o.Descriptor(n,this)}}e.BleManager=_}),324,[1,325,327,328,329,326,330,322,323,88]);
__d((function(g,r,i,a,m,e,d){'use strict';Object.defineProperty(e,"__esModule",{value:!0}),e.Device=void 0;r(d[0]);var t=r(d[1]);e.Device=class{constructor(t,s){Object.assign(this,t),Object.defineProperty(this,'_manager',{value:s,enumerable:!1})}requestConnectionPriority(t,s){return this._manager.requestConnectionPriorityForDevice(this.id,t,s)}readRSSI(t){return this._manager.readRSSIForDevice(this.id,t)}requestMTU(t,s){return this._manager.requestMTUForDevice(this.id,t,s)}connect(t){return this._manager.connectToDevice(this.id,t)}cancelConnection(){return this._manager.cancelDeviceConnection(this.id)}isConnected(){return this._manager.isDeviceConnected(this.id)}onDisconnected(t){return this._manager.onDeviceDisconnected(this.id,t)}discoverAllServicesAndCharacteristics(t){return this._manager.discoverAllServicesAndCharacteristicsForDevice(this.id,t)}services(){return this._manager.servicesForDevice(this.id)}characteristicsForService(t){return this._manager.characteristicsForDevice(this.id,t)}descriptorsForService(t,s){return this._manager.descriptorsForDevice(this.id,t,s)}readCharacteristicForService(t,s,c){return this._manager.readCharacteristicForDevice(this.id,t,s,c)}writeCharacteristicWithResponseForService(t,s,c,n){return this._manager.writeCharacteristicWithResponseForDevice(this.id,t,s,c,n)}writeCharacteristicWithoutResponseForService(t,s,c,n){return this._manager.writeCharacteristicWithoutResponseForDevice(this.id,t,s,c,n)}monitorCharacteristicForService(s,c,n,o,h){const v=[this.id,s,c,n,o],u=t.isIOS?v:[...v,h];return this._manager.monitorCharacteristicForDevice(...u)}async readDescriptorForService(t,s,c,n){return this._manager.readDescriptorForDevice(this.id,t,s,c,n)}async writeDescriptorForService(t,s,c,n,o){return this._manager.writeDescriptorForDevice(this.id,t,s,c,n,o)}}}),325,[326,323]);
__d((function(g,r,i,a,m,e,d){'use strict';Object.defineProperty(e,"__esModule",{value:!0}),e.State=e.ScanMode=e.ScanCallbackType=e.LogLevel=e.ConnectionPriority=void 0;r(d[0]);e.ScanMode={Opportunistic:-1,LowPower:0,Balanced:1,LowLatency:2},e.ScanCallbackType={AllMatches:1,FirstMatch:2,MatchLost:4},e.State={Unknown:'Unknown',Resetting:'Resetting',Unsupported:'Unsupported',Unauthorized:'Unauthorized',PoweredOff:'PoweredOff',PoweredOn:'PoweredOn'},e.LogLevel={None:'None',Verbose:'Verbose',Debug:'Debug',Info:'Info',Warning:'Warning',Error:'Error'},e.ConnectionPriority={Balanced:0,High:1,LowPower:2}}),326,[322]);
__d((function(g,r,i,a,m,e,d){'use strict';Object.defineProperty(e,"__esModule",{value:!0}),e.Service=void 0;var t=r(d[0]);e.Service=class{constructor(t,s){Object.assign(this,t),Object.defineProperty(this,'_manager',{value:s,enumerable:!1})}characteristics(){return this._manager._characteristicsForService(this.id)}descriptorsForCharacteristic(t){return this._manager._descriptorsForService(this.id,t)}readCharacteristic(t,s){return this._manager._readCharacteristicForService(this.id,t,s)}writeCharacteristicWithResponse(t,s,c){return this._manager._writeCharacteristicWithResponseForService(this.id,t,s,c)}writeCharacteristicWithoutResponse(t,s,c){return this._manager._writeCharacteristicWithoutResponseForService(this.id,t,s,c)}monitorCharacteristic(s,c,h,o){const n=[this.id,s,c,h],_=t.isIOS?n:[...n,o];return this._manager._monitorCharacteristicForService(..._)}async readDescriptorForCharacteristic(t,s,c){return this._manager._readDescriptorForService(this.id,t,s,c)}async writeDescriptorForCharacteristic(t,s,c,h){return this._manager._writeDescriptorForService(this.id,t,s,c,h)}}}),327,[323]);
__d((function(g,r,i,a,m,e,d){'use strict';Object.defineProperty(e,"__esModule",{value:!0}),e.Characteristic=void 0;r(d[0]);var t=r(d[1]);e.Characteristic=class{constructor(t,s){Object.assign(this,t),Object.defineProperty(this,'_manager',{value:s,enumerable:!1})}descriptors(){return this._manager._descriptorsForCharacteristic(this.id)}read(t){return this._manager._readCharacteristic(this.id,t)}writeWithResponse(t,s){return this._manager._writeCharacteristicWithResponse(this.id,t,s)}writeWithoutResponse(t,s){return this._manager._writeCharacteristicWithoutResponse(this.id,t,s)}monitor(s,c,n){const h=[this.id,s,c],o=t.isIOS?h:[...h,n];return this._manager._monitorCharacteristic(...o)}async readDescriptor(t,s){return this._manager._readDescriptorForCharacteristic(this.id,t,s)}async writeDescriptor(t,s,c){return this._manager._writeDescriptorForCharacteristic(this.id,t,s,c)}}}),328,[329,323]);
__d((function(g,r,i,a,m,e,d){'use strict';Object.defineProperty(e,"__esModule",{value:!0}),e.Descriptor=void 0;e.Descriptor=class{constructor(t,s){Object.assign(this,t),Object.defineProperty(this,'_manager',{value:s,enumerable:!1})}async read(t){return this._manager._readDescriptor(this.id,t)}async write(t,s){return this._manager._writeDescriptor(this.id,t,s)}}}),329,[]);
__d((function(g,r,i,a,m,e,d){'use strict';var t=r(d[0]);Object.defineProperty(e,"__esModule",{value:!0}),e.EventEmitter=e.BleModule=void 0;var l=t(r(d[1])),u=t(r(d[2]));r(d[3]);e.BleModule=l.default.BlePlx,e.EventEmitter=u.default}),330,[1,103,128,326]);